<?xml version="1.0" encoding="UTF-8"?>
<TestCase id="Protected_EAC_ePassport" xmlns="http://globaltester.org/testspecification" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://globaltester.org/schema/testspecification.xsd">
	<Title>Check if the ePassport is EAC protected</Title>
	<Version>1.00</Version>
	<Purpose>Try to identifying if the connected ePassport is a protected EAC ePassport</Purpose>
	<Profile></Profile>
	<Reference></Reference>
	<Precondition>
		<Command>
			<Text>Perform a cold reset of the card in order to ensure all temporary data is removed</Text>
		</Command>
		<TechnicalCommand>
			card.gt_reset();
		</TechnicalCommand>
	</Precondition>
	<Precondition>
		<Command>
			<Text>Select the ePassport application with a plain SelectApplication APDU</Text>
		</Command>
		<TechnicalCommand>
			card.gt_BAC_selectApplicationEPASS();
		</TechnicalCommand>
	</Precondition>
	<Precondition>
		<Command>
			<Text>Perform BAC</Text>
		</Command>	
		<TechnicalCommand><![CDATA[
			// ###################################################
			// ## Please input here mrz from your own ePassport ##
			// ###################################################
			var MRZ1 = "P<D<<MUSTERMANN<<ERIKA<<<<<<<<<<<<<<<<<<<<<<";
			var MRZ2 = "C11T002JM4D<<9608122F1310317<<<<<<<<<<<<<<<6";
			var mrz = MRZ1.concat(MRZ2);
			card.gt_BAC_performBAC(mrz);
		]]></TechnicalCommand>
	</Precondition>
	<TestStep>
		<Command xsi:type="APDUCommand">
			<Text>Read first byte of EF.DG3 from ePassport</Text>
			<APDU sm="true">00 B0 {sfid} {offset} {le}</APDU>
		</Command>
		<Description>{sfid} defines short file id to implicit select and read binary EF.DG2 with {offset} and expected {le} bytes</Description>
		<Description>Send read binary command and try to read first byte of EF.DG3.
		If the ePassport and the file EF.DG3 is EAC protected the ePassport must return SW '69 82'
		(Security conditions not fullfilled.</Description>
		<TechnicalCommand>
			var P1 = "83";
			var P2 = "00";
			var data = null;
			var le = "01";
			var dg3 = card.gt_ISO7816_readBinary(P1,P2,data,le);
		</TechnicalCommand>
		<ExpectedResult xsi:type="APDUResult">
			<Text>In the case the EF.DG3 (fingerprints) are EAC protected the ePassport must returns SW '6982'</Text>
			<APDU sm="true">69 82</APDU>
			<TechnicalResult>
				assertStatusWord(new Array("6982"), card.SW.toString(HEX), FAILURE);
			</TechnicalResult>
		</ExpectedResult>
	</TestStep>
</TestCase>