<?xml version="1.0" encoding="UTF-8"?>
<TestCase id="Check_Credit_Balance"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://globaltester.org/testspecification">
	<Title>Check credit balance on Geldkarte</Title>
	<Version>1.00</Version>
	<Purpose>Try to find out if the attached card is a ec card (eletronic cash - money card) and check the money balance</Purpose>
	<Profile></Profile>
	<Reference></Reference>
	<Precondition>
		<Command>
			<Text>Perform a cold reset of the card in order to ensure all temporary data is removed</Text>
		</Command>
		<TechnicalCommand>
			card.gt_reset();
		</TechnicalCommand>
	</Precondition>
	<TestStep>
		<Command xsi:type="APDUCommand">
			<Text>Select the MF (Master File)</Text>
			<APDU sm="false">00 A4 00 0C {lc} {fid}</APDU>
		</Command>
		<TechnicalCommand>
			var ignoreSW = true;
			card.gt_ISO7816_selectMF(ignoreSW);
		</TechnicalCommand>
		<Description>{fid} defines the file ID of the MF</Description>
		<ExpectedResult xsi:type="APDUResult">
			<Text></Text>
			<APDU sm="false">90 00</APDU>
			<TechnicalResult>
				assertStatusWord(SW_NoError, card.SW.toString(HEX), FAILURE); 
			</TechnicalResult>
		</ExpectedResult>
	</TestStep>
	<TestStep>
		<Command xsi:type="APDUCommand">
			<Text>Select the eC card application in a plain SELECT Application APDU</Text>
			<APDU sm="false">00 A4 04 0C {{lc} {aid}}</APDU>
		</Command>
		<TechnicalCommand>
			var ignoreSW = true;
			var aid = new ByteString("D2 76 00 00 25 45 50 02 00",HEX); 
			card.gt_ISO7816_selectAID(aid,ignoreSW);
		</TechnicalCommand>
		<Description>{aid} defines the application ID</Description>
		<ExpectedResult xsi:type="APDUResult">
			<Text></Text>
			<APDU sm="false">90 00</APDU>
			<TechnicalResult>
				assertStatusWord(SW_NoError, card.SW.toString(HEX), FAILURE); 
			</TechnicalResult>
		</ExpectedResult>
	</TestStep>
	<TestStep>
		<Command xsi:type="APDUCommand">
			<Text>Select record based file with file ID</Text>
			<APDU sm="false">00 A4 02 0C {{lc} {fid}}</APDU>
		</Command>
		<TechnicalCommand>
			var command = new ByteString("00 A4 02 0C 02 01 04", HEX);
			card.gt_sendCommand(command);
		</TechnicalCommand>
		<Description>{fid} defines the file ID</Description>
		<ExpectedResult xsi:type="APDUResult">
			<Text></Text>
			<APDU sm="false">90 00</APDU>
			<TechnicalResult>
				assertStatusWord(SW_NoError, card.SW.toString(HEX), FAILURE);
			</TechnicalResult>
		</ExpectedResult>
	</TestStep>
	<TestStep>
		<Command xsi:type="APDUCommand">
			<Text>Try to read record with record number 1</Text>
			<APDU sm="false">00 B2 01 04 00</APDU>
		</Command>
		<TechnicalCommand>
			var command = new ByteString("00 B2 01 04 00", HEX);
			var response = card.gt_sendCommand(command);
		</TechnicalCommand>
		<ExpectedResult xsi:type="APDUResult">
			<Text>The read record command returns a ByteString. In the ByteString the rest on cash money on the card is coded.</Text>
			<APDU sm="false">90 00</APDU>
			<TechnicalResult>
                assertStatusWord(SW_NoError, card.SW.toString(HEX), FAILURE);
                assertBigger(0, response.byteAt(1)+response.byteAt(2), FAILURE);
            </TechnicalResult>
		</ExpectedResult>
	</TestStep>
</TestCase>