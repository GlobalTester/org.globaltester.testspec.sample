<?xml version="1.0" encoding="UTF-8"?>
<TestCase id="Protected_EAC_ePassport"
	xmlns="http://globaltester.org/testspecification"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<Title>Check if the ePassport is EAC protected</Title>
	<Version>1.00</Version>
	<Purpose>Try to identifying if the connected ePassport is a protected EAC ePassport</Purpose>
	<Profile></Profile>
	<Reference></Reference>
	<Precondition>
		<Command>
			<Text>Set environment</Text>
		</Command>
		<TechnicalCommand>
			Packages.org.globaltester.testrunner.TestRunnerEnvironmentInitializer.setEnvironment(getRunnerInstance());
		</TechnicalCommand>
		<Description></Description>
	</Precondition>
	<Precondition>	
		<Command>
			<Text>Reset card</Text>
		</Command>
		<TechnicalCommand>
			card.gt_reset();
		</TechnicalCommand>
		<Description>Perform a cold reset of the card in order to ensure all temporary data is removed</Description>
	</Precondition>
	<Precondition>
		<Command>
			<Text>Select the ePassport application with a plain SELECT Application APDU</Text>
		</Command>	
		<TechnicalCommand>
			card.gt_BAC_selectApplicationEPASS();
		</TechnicalCommand>
	</Precondition>
	<Precondition>
		<Command>
			<Text>Perform BAC</Text>
		</Command>	
		<TechnicalCommand>
			var mrz = card.gt_getSampleConfig("ICAO9303","MRZ");
			card.gt_BAC_performBAC(mrz);
		</TechnicalCommand>
	</Precondition>
	<TestStep>
		<Command xsi:type="APDUCommand">
			<Text>Read first byte of EF.DG3 from ePassport</Text>
			<APDU sm="true">00 B0 {sfid} {offset} {le}</APDU>
		</Command>
		<Description>{sfid} defines short file id to implicit select and read binary EF.DG3</Description>
		<Description>{offset} defines the offset in the EF.DG3</Description>
		<Description>{le} defines the expected bytes</Description>
		<Description>Send READ BINARY command and try to read first byte of EF.DG3.
		If the ePassport and the file EF.DG3 is EAC protected the ePassport must return SW '69 82'
		(Security conditions not fullfilled).</Description>
		<TechnicalCommand>
			var P1 = "83";
			var P2 = "00";
			var le = "01";
			var command = new ByteString("00 B0 83 00 01", HEX);
			card.gt_sendCommand(command);
		</TechnicalCommand>
		<ExpectedResult xsi:type="APDUResult">
			<Text>In the case the EF.DG3 (fingerprints) are EAC protected the ePassport must returns SW '6982'. If ePassport responces with SW '6a82' means file not found</Text>
			<APDU sm="true">69 82</APDU>
			<TechnicalResult>
				assertStatusWord(new Array("6982"), card.SW.toString(HEX), FAILURE);
			</TechnicalResult>
		</ExpectedResult>
	</TestStep>
</TestCase>
